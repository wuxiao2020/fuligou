<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="tech.dao.CommentMapper" >
  <resultMap id="BaseResultMap" type="tech.model.Comment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="article_id" property="articleId" jdbcType="VARCHAR" />
    <result column="push_time" property="pushTime" jdbcType="TIMESTAMP" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="user" property="user" jdbcType="VARCHAR" />
    <result column="userId" property="userid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    `id`, `article_id`, `push_time`, `content`, `parent_id`, `user`, `userId`
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="Integer" >
    select 
    <include refid="Base_Column_List" />
    from `comment`
    where `id` = #{id,jdbcType=INTEGER}
  </select>
  <select id="queryByArticle" resultMap="BaseResultMap" parameterType="Integer" >
    select
    <include refid="Base_Column_List" />
    from `comment`
    where `article_id` = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Integer" >
    delete from `comment`
    where `id` = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="tech.model.Comment" >
    insert into `comment` (`id`, `article_id`, `push_time`, 
      `content`, `parent_id`, `user`, 
      `userId`)
    values (#{id,jdbcType=INTEGER}, #{articleId,jdbcType=VARCHAR}, #{pushTime,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, #{user,jdbcType=VARCHAR}, 
      #{userid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="tech.model.Comment" >
    insert into `comment`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        `id`,
      </if>
      <if test="articleId != null" >
        `article_id`,
      </if>
      <if test="pushTime != null" >
        `push_time`,
      </if>
      <if test="content != null" >
        `content`,
      </if>
      <if test="parentId != null" >
        `parent_id`,
      </if>
      <if test="user != null" >
        `user`,
      </if>
      <if test="userid != null" >
        `userId`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="articleId != null" >
        #{articleId,jdbcType=VARCHAR},
      </if>
      <if test="pushTime != null" >
        #{pushTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="user != null" >
        #{user,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="tech.model.Comment" >
    update `comment`
    <set >
      <if test="articleId != null" >
        `article_id` = #{articleId,jdbcType=VARCHAR},
      </if>
      <if test="pushTime != null" >
        `push_time` = #{pushTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        `content` = #{content,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        `parent_id` = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="user != null" >
        `user` = #{user,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        `userId` = #{userid,jdbcType=VARCHAR},
      </if>
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="tech.model.Comment" >
    update `comment`
    set `article_id` = #{articleId,jdbcType=VARCHAR},
      `push_time` = #{pushTime,jdbcType=TIMESTAMP},
      `content` = #{content,jdbcType=VARCHAR},
      `parent_id` = #{parentId,jdbcType=VARCHAR},
      `user` = #{user,jdbcType=VARCHAR},
      `userId` = #{userid,jdbcType=VARCHAR}
    where `id` = #{id,jdbcType=INTEGER}
  </update>
</mapper>